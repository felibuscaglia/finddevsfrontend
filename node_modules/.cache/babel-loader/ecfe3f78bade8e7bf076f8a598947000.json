{"ast":null,"code":"var _jsxFileName = \"/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/JobInfo/JobInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useLayoutEffect } from 'react';\nimport style from './JobInfo.module.css';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Loading from '../../Media/Loading.gif';\nimport Register from '../../Components/PopUps/RegisterPopUp';\nimport jwt from 'jsonwebtoken';\nimport { setUserInfo } from '../../Actions/index';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft, faCheckCircle } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction JobInfo({\n  jobID,\n  user,\n  setUserInfo\n}) {\n  _s();\n\n  const [job, setJob] = useState({});\n  const [applied, setApplied] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [isMember, setIsMember] = useState(false);\n  const [notUser, setNotUser] = useState(false);\n\n  async function asyncUseEffect(username) {\n    await setUserInfo(username);\n  }\n\n  useLayoutEffect(() => {\n    if (!user.username) {\n      const user = jwt.decode(JSON.parse(localStorage.getItem('user')));\n\n      if (user) {\n        asyncUseEffect(user.username);\n      } else setNotUser(true);\n    }\n\n    axios.get(`/jobs/${jobID}/jobInfo`).then(jobInfo => {\n      setJob(jobInfo.data);\n      const found = jobInfo.data.Applicants.find(applicant => applicant.id === user.id);\n      const findMember = jobInfo.data.project.users.find(member => member.id === user.id && member.userXprojects.endDate === null);\n\n      if (findMember) {\n        setIsMember(true);\n      } else if (found && found.username) setApplied(true);\n\n      setLoading(false);\n    }).catch(err => console.log(err));\n  }, [user]);\n\n  function applyToJob() {\n    axios.post(`/jobs/${jobID}/applicants`, {\n      username: user.username\n    }).then(res => setApplied(true)).catch(err => console.log(err));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [job.project && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: job.project && job.project.mainColor,\n          color: job.project.brightness === 'bright' ? '#fff' : '#000'\n        },\n        id: style.mainDiv,\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          style: {\n            color: job.project.brightness === 'bright' ? '#fff' : '#000'\n          },\n          to: \"/jobs\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            id: style.goBack,\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              style: {\n                marginRight: '10px'\n              },\n              icon: faArrowLeft\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 143\n            }, this), \"More jobs\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 119\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"links\",\n          to: `/project/profile/${job.project.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"displayFlex\",\n            id: \"alignItemsCenter\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: style.projectLogoDiv,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                alt: \"Project logo\",\n                src: job.project.logo,\n                id: style.logo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              style: {\n                color: job.project.brightness === 'bright' ? '#fff' : '#000',\n                margin: '0px'\n              },\n              className: \"font800\",\n              children: job.project.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          id: style.jobTitle,\n          children: job.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: style.btnDiv,\n          children: [notUser ? /*#__PURE__*/_jsxDEV(Register, {\n            isJobProfile: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 44\n          }, this) : isMember ? /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: job.project.brightness === 'bright' ? '#fff' : '#000',\n              background: job.project.brightness === 'bright' ? '#000' : '#fff'\n            },\n            id: style.applied,\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              id: style.appliedIcon,\n              icon: faCheckCircle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 213\n            }, this), \" You are already part of \", job.project.name, \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 48\n          }, this) : applied ? /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: job.project.brightness === 'bright' ? '#fff' : '#000',\n              background: job.project.brightness === 'bright' ? '#000' : '#fff'\n            },\n            id: style.applied,\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              id: style.appliedIcon,\n              icon: faCheckCircle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 210\n            }, this), \" You have applied to this job\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 45\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: applyToJob,\n            style: {\n              color: job.project.brightness === 'bright' ? '#fff' : '#000',\n              border: job.project.brightness === 'bright' ? '4px solid #fff' : '4px solid #000'\n            },\n            id: style.applyBtn,\n            children: \"Apply to this job\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 45\n          }, this), job.Applicants.length >= 15 && !applied && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font200\",\n            children: \"\\uD83D\\uDD25 This job has received many applications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 77\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: job.description\n          },\n          id: style.jobDescrip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"Loading GIF\",\n      id: style.loading,\n      src: Loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(JobInfo, \"eOHbxsLDDPaWyb9AKYpcAVdfd88=\");\n\n_c = JobInfo;\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.userInfo\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setUserInfo: username => dispatch(setUserInfo(username))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JobInfo);\n\nvar _c;\n\n$RefreshReg$(_c, \"JobInfo\");","map":{"version":3,"sources":["/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/JobInfo/JobInfo.jsx"],"names":["React","useState","useLayoutEffect","style","axios","Link","connect","Loading","Register","jwt","setUserInfo","FontAwesomeIcon","faArrowLeft","faCheckCircle","JobInfo","jobID","user","job","setJob","applied","setApplied","loading","setLoading","isMember","setIsMember","notUser","setNotUser","asyncUseEffect","username","decode","JSON","parse","localStorage","getItem","get","then","jobInfo","data","found","Applicants","find","applicant","id","findMember","project","users","member","userXprojects","endDate","catch","err","console","log","applyToJob","post","res","background","mainColor","color","brightness","mainDiv","goBack","marginRight","projectLogoDiv","logo","margin","name","jobTitle","title","btnDiv","appliedIcon","border","applyBtn","length","__html","description","jobDescrip","mapStateToProps","state","userInfo","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useLayoutEffect } from 'react';\nimport style from './JobInfo.module.css';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Loading from '../../Media/Loading.gif';\nimport Register from '../../Components/PopUps/RegisterPopUp';\nimport jwt from 'jsonwebtoken';\nimport { setUserInfo } from '../../Actions/index'; \nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft, faCheckCircle } from '@fortawesome/free-solid-svg-icons';\n\nfunction JobInfo({ jobID, user, setUserInfo }) {\n    const [job, setJob] = useState({});\n    const [applied, setApplied] = useState(false);\n    const [loading, setLoading] = useState(true);\n    const [isMember, setIsMember] = useState(false);\n    const [notUser, setNotUser] = useState(false);\n\n    async function asyncUseEffect(username) {\n        await (setUserInfo(username));\n    }\n\n    useLayoutEffect(() => {\n        if (!user.username) {\n            const user = jwt.decode(JSON.parse(localStorage.getItem('user')))\n            if (user) {\n                asyncUseEffect(user.username);\n            } else setNotUser (true)\n        }\n        axios.get(`/jobs/${jobID}/jobInfo`)\n            .then(jobInfo => {\n                setJob(jobInfo.data);\n                const found = jobInfo.data.Applicants.find(applicant => applicant.id === user.id);\n                const findMember = jobInfo.data.project.users.find(member => member.id === user.id && member.userXprojects.endDate === null);\n                if (findMember) {\n                    setIsMember(true);\n                } else if (found && found.username) setApplied(true)\n                setLoading(false);\n            })\n            .catch(err => console.log(err))\n    }, [user])\n\n    function applyToJob() {\n        axios.post(`/jobs/${jobID}/applicants`, { username: user.username })\n            .then(res => setApplied(true))\n            .catch(err => console.log(err))\n    }\n\n    return (\n        <div>\n            {!loading ?\n                <div>\n                    {job.project &&\n                        <div style={{ background: job.project && job.project.mainColor, color: job.project.brightness === 'bright' ? '#fff' : '#000' }} id={style.mainDiv}>\n                            <Link style={{ color: job.project.brightness === 'bright' ? '#fff' : '#000' }} to='/jobs'><span id={style.goBack}><FontAwesomeIcon style={{ marginRight: '10px' }} icon={faArrowLeft} />More jobs</span></Link>\n                            <Link className='links' to={`/project/profile/${job.project.id}`}>\n                                <div className='displayFlex' id='alignItemsCenter'>\n                                    <div id={style.projectLogoDiv}>\n                                        <img alt=\"Project logo\" src={job.project.logo} id={style.logo} />\n                                    </div>\n                                    <h5 style={{ color: job.project.brightness === 'bright' ? '#fff' : '#000', margin: '0px' }} className='font800'>{job.project.name}</h5>\n                                </div>\n                            </Link>\n                            <h1 id={style.jobTitle}>{job.title}</h1>\n                            <div id={style.btnDiv}>\n                                {notUser ? <Register isJobProfile={true} /> :\n                                    isMember ? <span style={{ color: job.project.brightness === 'bright' ? '#fff' : '#000', background: job.project.brightness === 'bright' ? '#000' : '#fff' }} id={style.applied}><FontAwesomeIcon id={style.appliedIcon} icon={faCheckCircle} /> You are already part of {job.project.name}.</span> :\n                                        applied ?\n                                            <span style={{ color: job.project.brightness === 'bright' ? '#fff' : '#000', background: job.project.brightness === 'bright' ? '#000' : '#fff' }} id={style.applied}><FontAwesomeIcon id={style.appliedIcon} icon={faCheckCircle} /> You have applied to this job</span> :\n                                            <button onClick={applyToJob} style={{ color: job.project.brightness === 'bright' ? '#fff' : '#000', border: job.project.brightness === 'bright' ? '4px solid #fff' : '4px solid #000' }} id={style.applyBtn}>Apply to this job</button>\n                                }\n                                {job.Applicants.length >= 15 && !applied && <span className='font200'>🔥 This job has received many applications</span>}\n                            </div>\n                        </div>}\n                    <div>\n                        <div dangerouslySetInnerHTML={{ __html: job.description }} id={style.jobDescrip}></div>\n                    </div>\n                </div> :\n                <img alt=\"Loading GIF\" id={style.loading} src={Loading} />\n            }\n        </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return {\n        user: state.userInfo\n    }\n}\n\nfunction mapDispatchToProps (dispatch) {\n    return {\n        setUserInfo: username => dispatch(setUserInfo(username))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JobInfo);"]},"metadata":{},"sourceType":"module"}