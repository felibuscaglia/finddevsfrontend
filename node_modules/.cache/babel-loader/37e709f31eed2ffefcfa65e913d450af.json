{"ast":null,"code":"var _jsxFileName = \"/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/StartupAdminPanel/JobPanel/JobPanel.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useLayoutEffect, useState } from 'react';\nimport style from './JobPanel.module.css';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport JobCard from '../../JobListing/JobCardProfile';\nimport Empty from \"../../../Media/emptyJob.svg\";\nimport Loading from '../../../Media/Loading.gif';\nimport jwt from 'jsonwebtoken';\nimport { setUserInfo } from '../../../Actions/index';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDoorOpen } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction JobPanel({\n  projectID,\n  setUserInfo,\n  user\n}) {\n  _s();\n\n  const [project, setProject] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  async function asyncUseEffect(username, userId) {\n    await setUserInfo(username);\n\n    try {\n      const projectData = await axios.get(`/projects/${projectID}`);\n      const userFound = await projectData.data.users.find(member => member.id === userId);\n      if (!userFound || userFound.userXprojects.isFounder === false || projectData.data.isDeleted) window.location.replace('/error');\n      setProject(projectData.data);\n      setTimeout(() => {\n        setLoading(false);\n      }, 1000);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  useLayoutEffect(() => {\n    const user = jwt.decode(JSON.parse(localStorage.getItem('user')));\n\n    if (user) {\n      asyncUseEffect(user.username, user.id);\n    } else window.location.replace('/error');\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"Loading GIF\",\n      src: Loading,\n      id: style.loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"displayFlex\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: style.fixedDiv,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: style.logoDiv,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/project/profile/${projectID}`,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"Project logo\",\n            src: project.logo,\n            id: style.invertedLogo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 64\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        id: style.link,\n        to: `/admin/panel`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font200\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faDoorOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 85\n          }, this), \" Back to Admin Panel\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 59\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), project.jobOpportunities && project.jobOpportunities.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      id: style.secondDiv,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"font800\",\n        children: \"Job Panel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: style.jobDiv,\n        children: project.jobOpportunities && project.jobOpportunities.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n          isJobPanel: true,\n          project: project,\n          job: job\n        }, job.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 90\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"links\",\n        to: `/project/addJob/${projectID}`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          id: style.addBtn,\n          children: \"Post a job\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 81\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      id: style.emptyDiv,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"No jobs posted\",\n        src: Empty,\n        id: style.empty\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          marginBottom: '25px'\n        },\n        className: \"font800\",\n        children: \"No jobs posted.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"links\",\n        to: `/project/addJob/${projectID}`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          id: style.addBtn2,\n          children: \"Post a job\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 81\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(JobPanel, \"n9eHG6NRaaKF19vMk5ZqESp3Suk=\");\n\n_c = JobPanel;\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.userInfo\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setUserInfo: username => dispatch(setUserInfo(username))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JobPanel);\n\nvar _c;\n\n$RefreshReg$(_c, \"JobPanel\");","map":{"version":3,"sources":["/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/StartupAdminPanel/JobPanel/JobPanel.jsx"],"names":["React","useLayoutEffect","useState","style","axios","Link","JobCard","Loading","jwt","setUserInfo","connect","FontAwesomeIcon","faDoorOpen","JobPanel","projectID","user","project","setProject","loading","setLoading","asyncUseEffect","username","userId","projectData","get","userFound","data","users","find","member","id","userXprojects","isFounder","isDeleted","window","location","replace","setTimeout","err","console","log","decode","JSON","parse","localStorage","getItem","fixedDiv","logoDiv","logo","invertedLogo","link","jobOpportunities","length","secondDiv","jobDiv","map","job","addBtn","emptyDiv","Empty","empty","marginBottom","addBtn2","mapStateToProps","state","userInfo","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,eAAhB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,iCAApB;;AAEA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,UAAT,QAA2B,mCAA3B;;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,SAAF;AAAaL,EAAAA,WAAb;AAA0BM,EAAAA;AAA1B,CAAlB,EAAoD;AAAA;;AAChD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,IAAD,CAAtC;;AAEA,iBAAekB,cAAf,CAA8BC,QAA9B,EAAwCC,MAAxC,EAAgD;AAC5C,UAAOb,WAAW,CAACY,QAAD,CAAlB;;AACA,QAAI;AACA,YAAME,WAAW,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAW,aAAYV,SAAU,EAAjC,CAA1B;AACA,YAAMW,SAAS,GAAG,MAAMF,WAAW,CAACG,IAAZ,CAAiBC,KAAjB,CAAuBC,IAAvB,CAA4BC,MAAM,IAAIA,MAAM,CAACC,EAAP,KAAcR,MAApD,CAAxB;AACA,UAAI,CAACG,SAAD,IAAcA,SAAS,CAACM,aAAV,CAAwBC,SAAxB,KAAsC,KAApD,IAA6DT,WAAW,CAACG,IAAZ,CAAiBO,SAAlF,EAA6FC,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,QAAxB;AAC7FnB,MAAAA,UAAU,CAACM,WAAW,CAACG,IAAb,CAAV;AACAW,MAAAA,UAAU,CAAC,MAAM;AACblB,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OAFS,EAEP,IAFO,CAAV;AAGH,KARD,CAQE,OAAOmB,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ;;AAEDrC,EAAAA,eAAe,CAAC,MAAM;AAClB,UAAMc,IAAI,GAAGP,GAAG,CAACiC,MAAJ,CAAWC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAX,CAAb;;AACA,QAAI9B,IAAJ,EAAU;AACNK,MAAAA,cAAc,CAACL,IAAI,CAACM,QAAN,EAAgBN,IAAI,CAACe,EAArB,CAAd;AACH,KAFD,MAEOI,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,QAAxB;AACV,GALc,EAKZ,EALY,CAAf;;AAOA,MAAIlB,OAAJ,EAAa;AACT,wBACI;AAAK,MAAA,GAAG,EAAC,aAAT;AAAuB,MAAA,GAAG,EAAEX,OAA5B;AAAqC,MAAA,EAAE,EAAEJ,KAAK,CAACe;AAA/C;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACI;AAAK,MAAA,EAAE,EAAEf,KAAK,CAAC2C,QAAf;AAAA,8BACI;AAAK,QAAA,EAAE,EAAE3C,KAAK,CAAC4C,OAAf;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,oBAAmBjC,SAAU,EAAxC;AAAA,iCAA2C;AAAK,YAAA,GAAG,EAAC,cAAT;AAAwB,YAAA,GAAG,EAAEE,OAAO,CAACgC,IAArC;AAA2C,YAAA,EAAE,EAAE7C,KAAK,CAAC8C;AAArD;AAAA;AAAA;AAAA;AAAA;AAA3C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,IAAD;AAAM,QAAA,EAAE,EAAE9C,KAAK,CAAC+C,IAAhB;AAAsB,QAAA,EAAE,EAAG,cAA3B;AAAA,+BAA0C;AAAM,UAAA,SAAS,EAAC,SAAhB;AAAA,kCAA0B,QAAC,eAAD;AAAiB,YAAA,IAAI,EAAEtC;AAAvB;AAAA;AAAA;AAAA;AAAA,kBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAA1C;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAOKI,OAAO,CAACmC,gBAAR,IAA4BnC,OAAO,CAACmC,gBAAR,CAAyBC,MAAzB,GAAkC,CAA9D,gBACG;AAAK,MAAA,EAAE,EAAEjD,KAAK,CAACkD,SAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,EAAE,EAAElD,KAAK,CAACmD,MAAf;AAAA,kBACKtC,OAAO,CAACmC,gBAAR,IAA4BnC,OAAO,CAACmC,gBAAR,CAAyBI,GAAzB,CAA6BC,GAAG,iBAAI,QAAC,OAAD;AAAsB,UAAA,UAAU,EAAE,IAAlC;AAAwC,UAAA,OAAO,EAAExC,OAAjD;AAA0D,UAAA,GAAG,EAAEwC;AAA/D,WAAcA,GAAG,CAAC1B,EAAlB;AAAA;AAAA;AAAA;AAAA,gBAApC;AADjC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAKI,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAwB,QAAA,EAAE,EAAG,mBAAkBhB,SAAU,EAAzD;AAAA,+BAA4D;AAAM,UAAA,EAAE,EAAEX,KAAK,CAACsD,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA5D;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,gBAQG;AAAK,MAAA,EAAE,EAAEtD,KAAK,CAACuD,QAAf;AAAA,8BACI;AAAK,QAAA,GAAG,EAAC,gBAAT;AAA0B,QAAA,GAAG,EAAEC,KAA/B;AAAsC,QAAA,EAAE,EAAExD,KAAK,CAACyD;AAAhD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAI,QAAA,KAAK,EAAE;AAAEC,UAAAA,YAAY,EAAE;AAAhB,SAAX;AAAqC,QAAA,SAAS,EAAC,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAwB,QAAA,EAAE,EAAG,mBAAkB/C,SAAU,EAAzD;AAAA,+BAA4D;AAAM,UAAA,EAAE,EAAEX,KAAK,CAAC2D,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA5D;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAfR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH;;GAvDQjD,Q;;KAAAA,Q;;AAyDT,SAASkD,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHjD,IAAAA,IAAI,EAAEiD,KAAK,CAACC;AADT,GAAP;AAGH;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACH1D,IAAAA,WAAW,EAAEY,QAAQ,IAAI8C,QAAQ,CAAC1D,WAAW,CAACY,QAAD,CAAZ;AAD9B,GAAP;AAGH;;AAED,eAAeX,OAAO,CAACqD,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CrD,QAA7C,CAAf","sourcesContent":["import React, { useLayoutEffect, useState } from 'react';\nimport style from './JobPanel.module.css';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport JobCard from '../../JobListing/JobCardProfile';\nimport Empty from '../../../Media/emptyJob.svg';\nimport Loading from '../../../Media/Loading.gif';\nimport jwt from 'jsonwebtoken';\nimport { setUserInfo } from '../../../Actions/index';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDoorOpen } from '@fortawesome/free-solid-svg-icons';\n\nfunction JobPanel({ projectID, setUserInfo, user }) {\n    const [project, setProject] = useState({});\n    const [loading, setLoading] = useState(true);\n\n    async function asyncUseEffect(username, userId) {\n        await (setUserInfo(username));\n        try {\n            const projectData = await axios.get(`/projects/${projectID}`);\n            const userFound = await projectData.data.users.find(member => member.id === userId);\n            if (!userFound || userFound.userXprojects.isFounder === false || projectData.data.isDeleted) window.location.replace('/error');\n            setProject(projectData.data);\n            setTimeout(() => {\n                setLoading(false);\n            }, 1000)\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    useLayoutEffect(() => {\n        const user = jwt.decode(JSON.parse(localStorage.getItem('user')))\n        if (user) {\n            asyncUseEffect(user.username, user.id);\n        } else window.location.replace('/error');\n    }, [])\n\n    if (loading) {\n        return (\n            <img alt=\"Loading GIF\" src={Loading} id={style.loading} />\n        )\n    }\n\n    return (\n        <div className='displayFlex'>\n            <div id={style.fixedDiv}>\n                <div id={style.logoDiv}>\n                    <Link to={`/project/profile/${projectID}`}><img alt=\"Project logo\" src={project.logo} id={style.invertedLogo} /></Link>\n                </div>\n                <Link id={style.link} to={`/admin/panel`}><span className='font200'><FontAwesomeIcon icon={faDoorOpen} /> Back to Admin Panel</span></Link>\n            </div>\n            {project.jobOpportunities && project.jobOpportunities.length > 0 ?\n                <div id={style.secondDiv}>\n                    <h1 className='font800'>Job Panel</h1>\n                    <div id={style.jobDiv}>\n                        {project.jobOpportunities && project.jobOpportunities.map(job => <JobCard key={job.id} isJobPanel={true} project={project} job={job} />)}\n                    </div>\n                    <Link className='links' to={`/project/addJob/${projectID}`}><span id={style.addBtn}>Post a job</span></Link>\n                </div> :\n                <div id={style.emptyDiv}>\n                    <img alt=\"No jobs posted\" src={Empty} id={style.empty} />\n                    <h1 style={{ marginBottom: '25px' }} className='font800'>No jobs posted.</h1>\n                    <Link className='links' to={`/project/addJob/${projectID}`}><span id={style.addBtn2}>Post a job</span></Link>\n                </div>}\n        </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return {\n        user: state.userInfo\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        setUserInfo: username => dispatch(setUserInfo(username))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JobPanel);"]},"metadata":{},"sourceType":"module"}