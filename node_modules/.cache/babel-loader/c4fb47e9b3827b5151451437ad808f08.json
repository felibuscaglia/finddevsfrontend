{"ast":null,"code":"var _jsxFileName = \"/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/ApplicantsPopUp/MembersPopUp.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Popup from 'reactjs-popup';\nimport style from './ApplicantsPopUp.module.css';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport ChangeRole from './ChangeRole';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Alert } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faUsers, faCheckCircle, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MembersPopUp({\n  projectID,\n  userInfo,\n  brightness,\n  isFounder\n}) {\n  _s();\n\n  const [project, setProject] = useState({});\n  const [changeRole, setChangeRole] = useState(false);\n  const [copied, setCopied] = useState(false);\n  const [fire, setFire] = useState(false);\n  useEffect(() => {\n    axios.get(`/projects/${projectID}`).then(projectData => setProject(projectData.data)).catch(err => console.log(err));\n  }, []);\n\n  function copiedFunction() {\n    setCopied(true);\n    setTimeout(() => {\n      setCopied(false);\n    }, 3000);\n  }\n\n  function fireUser(userID) {\n    axios.delete(`/projects/${projectID}/${userID}/fire`).then(res => window.location.reload()).catch(err => console.log(err));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Popup, {\n    trigger: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: brightness === 'bright' ? '#fff' : '#000',\n        border: brightness === 'bright' ? '2px solid #fff' : '2px solid #000'\n      },\n      className: style.redirectDiv,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faUsers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 23\n        }, this), \" Members\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this),\n    modal: true,\n    children: close => /*#__PURE__*/_jsxDEV(\"div\", {\n      id: style.mainDiv,\n      children: [!changeRole ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: style.memberForm,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: style.closeBtn,\n          onClick: close,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 73\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"font200\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font800\",\n            children: project.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 53\n          }, this), \" members\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: style.topApplicantDiv,\n          children: project.users && project.users.map(user => user.userXprojects.endDate === null && /*#__PURE__*/_jsxDEV(\"div\", {\n            id: style.applicantDiv,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: style.userInfo,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  backgroundImage: `url(${user.profilePic})`\n                },\n                id: style.profilePic\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: style.memberInfo,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font800\",\n                  children: `@ ${user.username}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font200\",\n                  children: user.userXprojects.role\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 41\n            }, this), user.username !== userInfo.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              id: style.socialMediaDiv2,\n              children: [isFounder && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setChangeRole(user),\n                id: style.btn,\n                children: \"CHANGE ROLE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 63\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/user/${user.username}?verify`,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  id: style.btn,\n                  children: \"VALIDATE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 92\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n                text: user.email,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  id: style.btn,\n                  onClick: copiedFunction,\n                  children: \"CONTACT\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 84\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 49\n              }, this), isFounder && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setFire(user),\n                id: style.btn,\n                children: \"FIRE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 63\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 45\n            }, this)]\n          }, user.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(ChangeRole, {\n        userData: changeRole,\n        setChangeRole: setChangeRole,\n        projectName: project.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }, this), copied && /*#__PURE__*/_jsxDEV(Alert, {\n        id: style.copiedAlert,\n        color: \"success\",\n        children: \"Copied user's contact email to clipboard!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 32\n      }, this), fire && /*#__PURE__*/_jsxDEV(Alert, {\n        id: style.copiedAlert,\n        color: \"danger\",\n        children: [\"Are you sure you want to fire \", fire.username, \"?\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: style.actionBtn,\n          onClick: () => fireUser(fire.id),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheckCircle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 99\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setFire(false),\n          className: style.actionBtn,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimesCircle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 96\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MembersPopUp, \"mRV4R6c1uB7h4TiG/iHWiL2LDeU=\");\n\n_c = MembersPopUp;\n\nfunction mapDispatchToProps(state) {\n  return {\n    userInfo: state.userInfo\n  };\n}\n\nexport default connect(mapDispatchToProps, null)(MembersPopUp);\n\nvar _c;\n\n$RefreshReg$(_c, \"MembersPopUp\");","map":{"version":3,"sources":["/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/ApplicantsPopUp/MembersPopUp.jsx"],"names":["React","useEffect","useState","Popup","style","axios","Link","connect","ChangeRole","CopyToClipboard","Alert","FontAwesomeIcon","faTimes","faUsers","faCheckCircle","faTimesCircle","MembersPopUp","projectID","userInfo","brightness","isFounder","project","setProject","changeRole","setChangeRole","copied","setCopied","fire","setFire","get","then","projectData","data","catch","err","console","log","copiedFunction","setTimeout","fireUser","userID","delete","res","window","location","reload","color","border","redirectDiv","close","mainDiv","memberForm","closeBtn","name","topApplicantDiv","users","map","user","userXprojects","endDate","applicantDiv","backgroundImage","profilePic","memberInfo","username","role","socialMediaDiv2","btn","email","id","copiedAlert","actionBtn","mapDispatchToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Popup from 'reactjs-popup';\nimport style from './ApplicantsPopUp.module.css';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport ChangeRole from './ChangeRole';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Alert } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faUsers, faCheckCircle, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\n\nfunction MembersPopUp({ projectID, userInfo, brightness, isFounder }) {\n\n    const [project, setProject] = useState({});\n    const [changeRole, setChangeRole] = useState(false);\n    const [copied, setCopied] = useState(false);\n    const [fire, setFire] = useState(false);\n\n    useEffect(() => {\n        axios.get(`/projects/${projectID}`)\n            .then(projectData => setProject(projectData.data))\n            .catch(err => console.log(err))\n    }, [])\n\n    function copiedFunction() {\n        setCopied(true);\n        setTimeout(() => {\n            setCopied(false);\n        }, 3000)\n    }\n\n    function fireUser(userID) {\n        axios.delete(`/projects/${projectID}/${userID}/fire`)\n            .then(res => window.location.reload())\n            .catch(err => console.log(err))\n    }\n\n    return (\n        <Popup trigger={\n            <div style={{ color: brightness === 'bright' ? '#fff' : '#000', border: brightness === 'bright' ? '2px solid #fff' : '2px solid #000' }} className={style.redirectDiv}>\n                <span><FontAwesomeIcon icon={faUsers} /> Members</span>\n            </div>}\n            modal>\n            {close => (\n                <div id={style.mainDiv}>\n                    {!changeRole ?\n                        <div id={style.memberForm}>\n                            <button id={style.closeBtn} onClick={close}><FontAwesomeIcon icon={faTimes} /></button>\n                            <h1 className='font200'><span className='font800'>{project.name}</span> members</h1>\n                            <div id={style.topApplicantDiv}>\n                                {project.users && project.users.map(user =>\n                                    user.userXprojects.endDate === null &&\n                                    <div key={user.id} id={style.applicantDiv}>\n                                        <div id={style.userInfo}>\n                                            <div style={{ backgroundImage: `url(${user.profilePic})`}} id={style.profilePic}></div>\n                                            <div id={style.memberInfo}>\n                                                <span className='font800'>{`@ ${user.username}`}</span>\n                                                <span className='font200'>{user.userXprojects.role}</span>\n                                            </div>\n                                        </div>\n                                        {user.username !== userInfo.username &&\n                                            <div id={style.socialMediaDiv2}>\n                                                {isFounder && <button onClick={() => setChangeRole(user)} id={style.btn}>CHANGE ROLE</button>}\n                                                <Link to={`/user/${user.username}?verify`}><button id={style.btn}>VALIDATE</button></Link>\n                                                <CopyToClipboard text={user.email}><button id={style.btn} onClick={copiedFunction} >CONTACT</button></CopyToClipboard>\n                                                {isFounder && <button onClick={() => setFire(user)} id={style.btn}>FIRE</button>}\n                                            </div>}\n                                    </div>\n                                )}\n                            </div>\n                        </div> :\n                        <ChangeRole userData={changeRole} setChangeRole={setChangeRole} projectName={project.name} />}\n                    {copied && <Alert id={style.copiedAlert} color=\"success\">Copied user's contact email to clipboard!</Alert>}\n                    {fire &&\n                        <Alert id={style.copiedAlert} color=\"danger\">\n                            Are you sure you want to fire {fire.username}?\n                            <button className={style.actionBtn} onClick={() => fireUser(fire.id)}><FontAwesomeIcon icon={faCheckCircle} /></button>\n                            <button onClick={() => setFire(false)} className={style.actionBtn}><FontAwesomeIcon icon={faTimesCircle} /></button>\n                        </Alert>}\n                </div>\n            )}\n        </Popup>\n    )\n}\n\nfunction mapDispatchToProps(state) {\n    return {\n        userInfo: state.userInfo\n    }\n}\n\nexport default connect(mapDispatchToProps, null)(MembersPopUp);"]},"metadata":{},"sourceType":"module"}