{"ast":null,"code":"var _jsxFileName = \"/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/TermsAndConditions/Terms.jsx\";\nimport React, { useState } from 'react';\nimport { Accordion, AccordionBody, AccordionHeader, AccordionItem } from 'reactstrap';\nimport style from './Terms.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Terms() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Accordion, {\n      openId: openId,\n      toggle: toggle,\n      children: [/*#__PURE__*/_jsxDEV(AccordionItem, {\n        children: [/*#__PURE__*/_jsxDEV(AccordionHeader, {\n          targetId: \"1\",\n          children: \"Accordion Item 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AccordionBody, {\n          accordionId: \"1\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"This is the first item's accordion body.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 13\n          }, this), \"You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \".accordion-body\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 159\n          }, this), \", though the transition does limit overflow.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AccordionItem, {\n        children: [/*#__PURE__*/_jsxDEV(AccordionHeader, {\n          targetId: \"2\",\n          children: \"Accordion Item 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AccordionBody, {\n          accordionId: \"2\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"This is the second item's accordion body.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), \"You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \".accordion-body\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 159\n          }, this), \", though the transition does limit overflow.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AccordionItem, {\n        children: [/*#__PURE__*/_jsxDEV(AccordionHeader, {\n          targetId: \"3\",\n          children: \"Accordion Item 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AccordionBody, {\n          accordionId: \"3\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"This is the third item's accordion body.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), \"You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \".accordion-body\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 159\n          }, this), \", though the transition does limit overflow.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Terms;\nexport default Terms;\n\nvar _c;\n\n$RefreshReg$(_c, \"Terms\");","map":{"version":3,"sources":["/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/TermsAndConditions/Terms.jsx"],"names":["React","useState","Accordion","AccordionBody","AccordionHeader","AccordionItem","style","Terms","openId","toggle"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,aAApB,EAAmCC,eAAnC,EAAoDC,aAApD,QAAyE,YAAzE;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;;AAEA,SAASC,KAAT,GAAkB;AACd,sBACI;AAAA,2BACI,QAAC,SAAD;AAAW,MAAA,MAAM,EAAEC,MAAnB;AAA2B,MAAA,MAAM,EAAEC,MAAnC;AAAA,8BACJ,QAAC,aAAD;AAAA,gCACE,QAAC,eAAD;AAAiB,UAAA,QAAQ,EAAC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,aAAD;AAAe,UAAA,WAAW,EAAC,GAA3B;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,qKAEoJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFpJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADI,eAUJ,QAAC,aAAD;AAAA,gCACE,QAAC,eAAD;AAAiB,UAAA,QAAQ,EAAC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,aAAD;AAAe,UAAA,WAAW,EAAC,GAA3B;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,qKAEoJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFpJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVI,eAmBJ,QAAC,aAAD;AAAA,gCACE,QAAC,eAAD;AAAiB,UAAA,QAAQ,EAAC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,aAAD;AAAe,UAAA,WAAW,EAAC,GAA3B;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,qKAEoJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFpJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBI;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH;;KAlCQF,K;AAoCT,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Accordion, AccordionBody, AccordionHeader, AccordionItem } from 'reactstrap';\nimport style from './Terms.module.css';\n\nfunction Terms () {\n    return (\n        <div>\n            <Accordion openId={openId} toggle={toggle}>\n        <AccordionItem>\n          <AccordionHeader targetId=\"1\">\n            Accordion Item 1\n          </AccordionHeader>\n          <AccordionBody accordionId=\"1\">\n            <strong>This is the first item's accordion body.</strong>\n            You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n          </AccordionBody>\n        </AccordionItem>\n        <AccordionItem>\n          <AccordionHeader targetId=\"2\">\n            Accordion Item 2\n          </AccordionHeader>\n          <AccordionBody accordionId=\"2\">\n            <strong>This is the second item's accordion body.</strong>\n            You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n          </AccordionBody>\n        </AccordionItem>\n        <AccordionItem>\n          <AccordionHeader targetId=\"3\">\n            Accordion Item 3\n          </AccordionHeader>\n          <AccordionBody accordionId=\"3\">\n            <strong>This is the third item's accordion body.</strong>\n            You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n          </AccordionBody>\n        </AccordionItem>\n      </Accordion>\n        </div>\n    )\n}\n\nexport default Terms;\n\n"]},"metadata":{},"sourceType":"module"}