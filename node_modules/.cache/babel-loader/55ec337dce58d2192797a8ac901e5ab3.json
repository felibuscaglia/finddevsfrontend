{"ast":null,"code":"import _slicedToArray from\"/Users/felipebuscaglia/Henry/finddevsfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{connect}from'react-redux';import style from'./JobListings.module.css';import{filterJob as _filterJob,removeJobFilter as _removeJobFilter}from'../../Actions/index';import{Hint}from'react-autocomplete-hint';import JobCard from'./JobCard';import Loading from'../../Media/Loading.gif';import wavyImage from'../../Media/wavyBorder1.jpg';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faSearch,faTimesCircle}from'@fortawesome/free-solid-svg-icons';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function JobListings(_ref){var jobs=_ref.jobs,skills=_ref.skills,skillSelection=_ref.skillSelection,filteredJobs=_ref.filteredJobs,filterJob=_ref.filterJob,removeJobFilter=_ref.removeJobFilter;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];function addSkill(e){if(e.keyCode===13){var dontRepeat=skillSelection.find(function(skill){return skill.label.toLowerCase()===e.target.value.toLowerCase();});var found=skills.find(function(skill){return skill.label.toLowerCase()===e.target.value.toLowerCase();});if(found&&!dontRepeat){setLoading(true);filterJob(found);e.target.value='';setLoading(false);}}}return/*#__PURE__*/_jsxs(\"div\",{className:\"displayFlexColumn\",id:\"alignItemsCenter\",children:[/*#__PURE__*/_jsx(\"div\",{style:{backgroundImage:\"url(\".concat(wavyImage,\")\")},id:style.mainImage,children:/*#__PURE__*/_jsxs(\"div\",{id:style.searchDiv,children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faSearch}),/*#__PURE__*/_jsx(Hint,{options:skills,children:/*#__PURE__*/_jsx(\"input\",{onKeyDown:function onKeyDown(e){return addSkill(e);},type:\"text\",placeholder:\"Search for job skills\",id:style.searchInput})})]})}),/*#__PURE__*/_jsx(\"div\",{style:{display:skillSelection.length>0?'block':'none'},id:style.filteredDiv,children:skillSelection.map(function(filtered){return/*#__PURE__*/_jsxs(\"span\",{onClick:function onClick(){return removeJobFilter(filtered);},style:{background:filtered.strongColor,color:filtered.softColor},id:style.skillSpan,children:[filtered.label,\" \",/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faTimesCircle})]},filtered.id);})}),loading?/*#__PURE__*/_jsx(\"img\",{alt:\"Loading GIF\",id:style.loading,src:Loading}):skillSelection.length===0?jobs.map(function(job){return/*#__PURE__*/_jsx(JobCard,{setLoading:setLoading,job:job},job.id);}):filteredJobs.map(function(job){return/*#__PURE__*/_jsx(JobCard,{setLoading:setLoading,job:job},job.id);}),!loading&&/*#__PURE__*/_jsxs(\"div\",{className:style.endDiv,id:\"giveMargin\",children:[\"\\uD83E\\uDDD1\\u200D\\uD83D\\uDCBB \",/*#__PURE__*/_jsx(\"span\",{id:style.end,children:\"There are no more job opportunities. Please come back later!\"})]})]});}function mapStateToProps(state){return{jobs:state.jobs,skills:state.allSkills,skillSelection:state.jobSkillSelection,filteredJobs:state.filteredJobs};}function mapDispatchToProps(dispatch){return{filterJob:function filterJob(skill){return dispatch(_filterJob(skill));},removeJobFilter:function removeJobFilter(skill){return dispatch(_removeJobFilter(skill));}};}export default connect(mapStateToProps,mapDispatchToProps)(JobListings);","map":{"version":3,"sources":["/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/JobListing/JobListings.jsx"],"names":["React","useState","connect","style","filterJob","removeJobFilter","Hint","JobCard","Loading","wavyImage","FontAwesomeIcon","faSearch","faTimesCircle","JobListings","jobs","skills","skillSelection","filteredJobs","loading","setLoading","addSkill","e","keyCode","dontRepeat","find","skill","label","toLowerCase","target","value","found","backgroundImage","mainImage","searchDiv","searchInput","display","length","filteredDiv","map","filtered","background","strongColor","color","softColor","skillSpan","id","job","endDiv","end","mapStateToProps","state","allSkills","jobSkillSelection","mapDispatchToProps","dispatch"],"mappings":"oKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,KAAP,KAAkB,0BAAlB,CACA,OAASC,SAAS,GAATA,CAAAA,UAAT,CAAoBC,eAAe,GAAfA,CAAAA,gBAApB,KAA2C,qBAA3C,CACA,OAASC,IAAT,KAAqB,yBAArB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,yBAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,QAAT,CAAmBC,aAAnB,KAAwC,mCAAxC,C,wFAEA,QAASC,CAAAA,WAAT,MAAiG,IAA1EC,CAAAA,IAA0E,MAA1EA,IAA0E,CAApEC,MAAoE,MAApEA,MAAoE,CAA5DC,cAA4D,MAA5DA,cAA4D,CAA5CC,YAA4C,MAA5CA,YAA4C,CAA9Bb,SAA8B,MAA9BA,SAA8B,CAAnBC,eAAmB,MAAnBA,eAAmB,eAE/DJ,QAAQ,CAAC,KAAD,CAFuD,wCAEtFiB,OAFsF,eAE7EC,UAF6E,eAI7F,QAASC,CAAAA,QAAT,CAAkBC,CAAlB,CAAqB,CACjB,GAAIA,CAAC,CAACC,OAAF,GAAc,EAAlB,CAAsB,CAClB,GAAMC,CAAAA,UAAU,CAAGP,cAAc,CAACQ,IAAf,CAAqB,SAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,KAAN,CAAYC,WAAZ,KAA8BN,CAAC,CAACO,MAAF,CAASC,KAAT,CAAeF,WAAf,EAAlC,EAA1B,CAAnB,CACA,GAAMG,CAAAA,KAAK,CAAGf,MAAM,CAACS,IAAP,CAAY,SAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,KAAN,CAAYC,WAAZ,KAA8BN,CAAC,CAACO,MAAF,CAASC,KAAT,CAAeF,WAAf,EAAlC,EAAjB,CAAd,CACA,GAAIG,KAAK,EAAI,CAACP,UAAd,CAA0B,CACtBJ,UAAU,CAAC,IAAD,CAAV,CACAf,SAAS,CAAC0B,KAAD,CAAT,CACAT,CAAC,CAACO,MAAF,CAASC,KAAT,CAAiB,EAAjB,CACAV,UAAU,CAAC,KAAD,CAAV,CACH,CACJ,CACJ,CAED,mBACI,aAAK,SAAS,CAAC,mBAAf,CAAmC,EAAE,CAAC,kBAAtC,wBACI,YAAK,KAAK,CAAE,CAAEY,eAAe,eAAStB,SAAT,KAAjB,CAAZ,CAAqD,EAAE,CAAEN,KAAK,CAAC6B,SAA/D,uBACI,aAAK,EAAE,CAAE7B,KAAK,CAAC8B,SAAf,wBACI,KAAC,eAAD,EAAiB,IAAI,CAAEtB,QAAvB,EADJ,cAEI,KAAC,IAAD,EAAM,OAAO,CAAEI,MAAf,uBACI,cAAO,SAAS,CAAE,mBAACM,CAAD,QAAOD,CAAAA,QAAQ,CAACC,CAAD,CAAf,EAAlB,CAAsC,IAAI,CAAC,MAA3C,CAAkD,WAAW,CAAC,uBAA9D,CAAsF,EAAE,CAAElB,KAAK,CAAC+B,WAAhG,EADJ,EAFJ,GADJ,EADJ,cASI,YAAK,KAAK,CAAE,CAAEC,OAAO,CAAEnB,cAAc,CAACoB,MAAf,CAAwB,CAAxB,CAA4B,OAA5B,CAAsC,MAAjD,CAAZ,CAAuE,EAAE,CAAEjC,KAAK,CAACkC,WAAjF,UACKrB,cAAc,CAACsB,GAAf,CAAmB,SAAAC,QAAQ,qBACxB,cAAwB,OAAO,CAAE,yBAAMlC,CAAAA,eAAe,CAACkC,QAAD,CAArB,EAAjC,CAAkE,KAAK,CAAE,CAAEC,UAAU,CAAED,QAAQ,CAACE,WAAvB,CAAoCC,KAAK,CAAEH,QAAQ,CAACI,SAApD,CAAzE,CAA0I,EAAE,CAAExC,KAAK,CAACyC,SAApJ,WAAgKL,QAAQ,CAACb,KAAzK,kBAAgL,KAAC,eAAD,EAAiB,IAAI,CAAEd,aAAvB,EAAhL,GAAW2B,QAAQ,CAACM,EAApB,CADwB,EAA3B,CADL,EATJ,CAcK3B,OAAO,cACJ,YAAK,GAAG,CAAC,aAAT,CAAuB,EAAE,CAAEf,KAAK,CAACe,OAAjC,CAA0C,GAAG,CAAEV,OAA/C,EADI,CAEJQ,cAAc,CAACoB,MAAf,GAA0B,CAA1B,CACItB,IAAI,CAACwB,GAAL,CAAS,SAAAQ,GAAG,qBAAI,KAAC,OAAD,EAAsB,UAAU,CAAE3B,UAAlC,CAA8C,GAAG,CAAE2B,GAAnD,EAAcA,GAAG,CAACD,EAAlB,CAAJ,EAAZ,CADJ,CAGI5B,YAAY,CAACqB,GAAb,CAAiB,SAAAQ,GAAG,qBAAI,KAAC,OAAD,EAAsB,UAAU,CAAE3B,UAAlC,CAA8C,GAAG,CAAE2B,GAAnD,EAAcA,GAAG,CAACD,EAAlB,CAAJ,EAApB,CAnBZ,CAqBK,CAAC3B,OAAD,eAAY,aAAK,SAAS,CAAEf,KAAK,CAAC4C,MAAtB,CAA8B,EAAE,CAAC,YAAjC,0DAAoD,aAAM,EAAE,CAAE5C,KAAK,CAAC6C,GAAhB,0EAApD,GArBjB,GADJ,CAyBH,CAED,QAASC,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,CAC5B,MAAO,CACHpC,IAAI,CAAEoC,KAAK,CAACpC,IADT,CAEHC,MAAM,CAAEmC,KAAK,CAACC,SAFX,CAGHnC,cAAc,CAAEkC,KAAK,CAACE,iBAHnB,CAIHnC,YAAY,CAAEiC,KAAK,CAACjC,YAJjB,CAAP,CAMH,CAED,QAASoC,CAAAA,kBAAT,CAA4BC,QAA5B,CAAsC,CAClC,MAAO,CACHlD,SAAS,CAAE,mBAAAqB,KAAK,QAAI6B,CAAAA,QAAQ,CAAClD,UAAS,CAACqB,KAAD,CAAV,CAAZ,EADb,CAEHpB,eAAe,CAAE,yBAAAoB,KAAK,QAAI6B,CAAAA,QAAQ,CAACjD,gBAAe,CAACoB,KAAD,CAAhB,CAAZ,EAFnB,CAAP,CAIH,CAED,cAAevB,CAAAA,OAAO,CAAC+C,eAAD,CAAkBI,kBAAlB,CAAP,CAA6CxC,WAA7C,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport style from './JobListings.module.css';\nimport { filterJob, removeJobFilter } from '../../Actions/index';\nimport { Hint } from 'react-autocomplete-hint';\nimport JobCard from './JobCard';\nimport Loading from '../../Media/Loading.gif';\nimport wavyImage from '../../Media/wavyBorder1.jpg';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\n\nfunction JobListings({ jobs, skills, skillSelection, filteredJobs, filterJob, removeJobFilter }) {\n\n    const [loading, setLoading] = useState(false);\n\n    function addSkill(e) {\n        if (e.keyCode === 13) {\n            const dontRepeat = skillSelection.find (skill => skill.label.toLowerCase() === e.target.value.toLowerCase());\n            const found = skills.find(skill => skill.label.toLowerCase() === e.target.value.toLowerCase());\n            if (found && !dontRepeat) {\n                setLoading(true);\n                filterJob(found);\n                e.target.value = '';\n                setLoading(false);\n            }\n        }\n    }\n\n    return (\n        <div className='displayFlexColumn' id='alignItemsCenter'>\n            <div style={{ backgroundImage: `url(${wavyImage})`}} id={style.mainImage}>\n                <div id={style.searchDiv}>\n                    <FontAwesomeIcon icon={faSearch} />\n                    <Hint options={skills}>\n                        <input onKeyDown={(e) => addSkill(e)} type='text' placeholder='Search for job skills' id={style.searchInput} />\n                    </Hint>\n                </div>\n            </div>\n            <div style={{ display: skillSelection.length > 0 ? 'block' : 'none' }} id={style.filteredDiv}>\n                {skillSelection.map(filtered =>\n                    <span key={filtered.id} onClick={() => removeJobFilter(filtered)} style={{ background: filtered.strongColor, color: filtered.softColor }} id={style.skillSpan}>{filtered.label} <FontAwesomeIcon icon={faTimesCircle} /></span>\n                )}\n            </div>\n            {loading ?\n                <img alt=\"Loading GIF\" id={style.loading} src={Loading} /> :\n                skillSelection.length === 0 ?\n                    jobs.map(job => <JobCard key={job.id} setLoading={setLoading} job={job} />)\n                    :\n                    filteredJobs.map(job => <JobCard key={job.id} setLoading={setLoading} job={job} />)\n            }\n            {!loading && <div className={style.endDiv} id='giveMargin'>🧑‍💻 <span id={style.end}>There are no more job opportunities. Please come back later!</span></div>}\n        </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return {\n        jobs: state.jobs,\n        skills: state.allSkills,\n        skillSelection: state.jobSkillSelection,\n        filteredJobs: state.filteredJobs\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        filterJob: skill => dispatch(filterJob(skill)),\n        removeJobFilter: skill => dispatch(removeJobFilter(skill))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JobListings);"]},"metadata":{},"sourceType":"module"}