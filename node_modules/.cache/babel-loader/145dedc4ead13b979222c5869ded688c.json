{"ast":null,"code":"import _slicedToArray from\"/Users/felipebuscaglia/Henry/finddevsfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import style from'./UserCard.module.css';import{withStyles,makeStyles}from\"@material-ui/core/styles\";import Tooltip from'@material-ui/core/Tooltip';import Verification from'../../Media/Verification.png';import{selectWorkers as _selectWorkers}from'../../Actions/index';import{connect}from'react-redux';import{Link}from'react-router-dom';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faCheckCircle}from'@fortawesome/free-solid-svg-icons';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{arrow:{color:\"#181a19\"}};});function UserCard(_ref){var user=_ref.user,setLoading=_ref.setLoading,selectWorkers=_ref.selectWorkers,skillSelection=_ref.skillSelection;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),extraSkills=_useState2[0],setExtraSkills=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),extraSkillsLength=_useState4[0],setExtraLength=_useState4[1];useEffect(function(){if(user.skills){var reduced=user.skills.slice(8).reduce(function(acc,curr,index){return index===user.skills.slice(8).length-1?acc+curr.label:acc+\"\".concat(curr.label,\", \");},'');setExtraSkills(reduced);setExtraLength(user.skills.slice(8).length);}},[]);var classes=useStyles();var BlueOnGreenTooltip=withStyles({tooltip:{color:\"white\",backgroundColor:\"#181a19\",fontFamily:'Nunito',fontSize:'12px'}})(Tooltip);function addSkill(skill){setLoading(true);var dontRepeat=skillSelection.find(function(filtered){return filtered.id===skill.id;});if(!dontRepeat)selectWorkers(skill);setLoading(false);}return/*#__PURE__*/_jsxs(\"div\",{id:style.userCard,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"displayFlexColumn\",id:\"alignItemsCenter\",children:[/*#__PURE__*/_jsx(\"img\",{alt:\"Profile\",id:style.profilePic,src:user.profilePic}),/*#__PURE__*/_jsxs(\"div\",{id:\"alignItemsCenter\",className:\"displayFlex\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"font800\",style:{alignSelf:'flex-start'},children:[/*#__PURE__*/_jsx(\"span\",{style:{color:user.color},children:\"@ \"}),user.username]}),user.isPremium&&/*#__PURE__*/_jsx(\"img\",{alt:\"Verification badge\",id:style.verification,src:Verification})]}),/*#__PURE__*/_jsx(\"p\",{id:style.bio,children:user.description})]}),/*#__PURE__*/_jsxs(\"div\",{id:\"alignItemsCenter\",className:\"justifyCenter\",style:{flexWrap:'wrap'},children:[user.skills&&user.skills.slice(0,8).map(function(skill){return/*#__PURE__*/_jsx(\"div\",{id:style.skillDiv,children:/*#__PURE__*/_jsx(BlueOnGreenTooltip,{classes:{arrow:classes.arrow},id:style.tooltip,title:\"Add tag to filters\",arrow:true,children:/*#__PURE__*/_jsxs(\"span\",{onClick:function onClick(){addSkill(skill);},style:{background:\"\".concat(skill.strongColor),color:skill.softColor},id:style.skillSpan,children:[skill.user_skills.isValidated&&/*#__PURE__*/_jsx(FontAwesomeIcon,{style:{marginRight:'5px'},icon:faCheckCircle}),skill.label]})})},skill.id);}),extraSkills&&/*#__PURE__*/_jsx(BlueOnGreenTooltip,{classes:{arrow:classes.arrow},id:style.tooltip,title:extraSkills,arrow:true,children:/*#__PURE__*/_jsxs(\"span\",{id:style.plus,children:[\"+\",extraSkillsLength]})})]}),/*#__PURE__*/_jsx(Link,{id:style.link,to:\"/user/\".concat(user.username),children:/*#__PURE__*/_jsx(\"button\",{id:style.btn,style:{background:user.color},children:\"Contact\"})})]});}function mapStateToProps(state){return{skillSelection:state.skillSelection};}function mapDispatchToProps(dispatch){return{selectWorkers:function selectWorkers(skill){return dispatch(_selectWorkers(skill));}};}export default connect(mapStateToProps,mapDispatchToProps)(UserCard);","map":{"version":3,"sources":["/Users/felipebuscaglia/Henry/finddevsfrontend/src/Components/UserCard/UserCard.jsx"],"names":["React","useState","useEffect","style","withStyles","makeStyles","Tooltip","Verification","selectWorkers","connect","Link","FontAwesomeIcon","faCheckCircle","useStyles","theme","arrow","color","UserCard","user","setLoading","skillSelection","extraSkills","setExtraSkills","extraSkillsLength","setExtraLength","skills","reduced","slice","reduce","acc","curr","index","length","label","classes","BlueOnGreenTooltip","tooltip","backgroundColor","fontFamily","fontSize","addSkill","skill","dontRepeat","find","filtered","id","userCard","profilePic","alignSelf","username","isPremium","verification","bio","description","flexWrap","map","skillDiv","background","strongColor","softColor","skillSpan","user_skills","isValidated","marginRight","plus","link","btn","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport style from './UserCard.module.css';\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Verification from '../../Media/Verification.png';\nimport { selectWorkers } from '../../Actions/index';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons';\n\nconst useStyles = makeStyles(theme => ({\n    arrow: { color: \"#181a19\" }\n}));\n\nfunction UserCard({ user, setLoading, selectWorkers, skillSelection }) {\n\n    const [extraSkills, setExtraSkills] = useState(null);\n    const [extraSkillsLength, setExtraLength] = useState(0);\n\n    useEffect(() => {\n        if (user.skills) {\n            const reduced = user.skills.slice(8).reduce((acc, curr, index) => index === user.skills.slice(8).length - 1 ? acc + curr.label : acc + `${curr.label}, `, '');\n            setExtraSkills(reduced);\n            setExtraLength(user.skills.slice(8).length);\n        }\n    }, [])\n\n    const classes = useStyles();\n\n    const BlueOnGreenTooltip = withStyles({\n        tooltip: {\n            color: \"white\",\n            backgroundColor: \"#181a19\",\n            fontFamily: 'Nunito',\n            fontSize: '12px'\n        }\n    })(Tooltip);\n\n    function addSkill (skill) {\n        setLoading (true);\n        const dontRepeat = skillSelection.find (filtered => filtered.id === skill.id);\n        if (!dontRepeat) selectWorkers(skill);\n        setLoading (false);\n    }\n\n    return (\n        <div id={style.userCard}>\n            <div className='displayFlexColumn' id='alignItemsCenter'>\n                <img alt=\"Profile\" id={style.profilePic} src={user.profilePic} />\n                <div id='alignItemsCenter' className='displayFlex'>\n                    <span className='font800' style={{ alignSelf: 'flex-start' }}><span style={{ color: user.color }}>@ </span>{user.username}</span>\n                    {user.isPremium && <img alt=\"Verification badge\" id={style.verification} src={Verification} />}\n                </div>\n                <p id={style.bio}>{user.description}</p>\n            </div>\n            <div id='alignItemsCenter' className='justifyCenter' style={{ flexWrap: 'wrap' }}>\n                {user.skills && user.skills.slice(0, 8).map(skill =>\n                    <div key={skill.id} id={style.skillDiv}>\n                        <BlueOnGreenTooltip classes={{ arrow: classes.arrow }} id={style.tooltip} title='Add tag to filters' arrow>\n                            <span\n                                onClick={() => { addSkill (skill) }}\n                                style={{ background: `${skill.strongColor}`, color: skill.softColor }}\n                                id={style.skillSpan}>\n                                {skill.user_skills.isValidated && <FontAwesomeIcon style={{ marginRight: '5px' }} icon={faCheckCircle} />}{skill.label}\n                            </span>\n                        </BlueOnGreenTooltip>\n                    </div>\n                )}\n                {extraSkills &&\n                    <BlueOnGreenTooltip classes={{ arrow: classes.arrow }} id={style.tooltip} title={extraSkills} arrow>\n                        <span id={style.plus}>+{extraSkillsLength}</span>\n                    </BlueOnGreenTooltip>}\n            </div>\n            <Link id={style.link} to={`/user/${user.username}`}><button id={style.btn} style={{ background: user.color }}>Contact</button></Link>\n        </div>\n    )\n}\n\nfunction mapStateToProps (state) {\n    return {\n        skillSelection: state.skillSelection\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        selectWorkers: skill => dispatch(selectWorkers(skill))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserCard);"]},"metadata":{},"sourceType":"module"}