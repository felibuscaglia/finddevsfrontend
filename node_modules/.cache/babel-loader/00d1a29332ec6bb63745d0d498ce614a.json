{"ast":null,"code":"var _jsxFileName = \"/Users/felipebuscaglia/Henry/finddevsfrontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Header from './Components/Header/Header';\nimport Homepage from './Screens/Homepage/Homepage';\nimport UserProfile from './Screens/UserProfile/UserProfile';\nimport Footer from './Components/Footer/Footer';\nimport HeaderUser from './Components/HeaderUser/HeaderUser';\nimport PostStartup from './Screens/PostStartup/PostStartup';\nimport ProjectProfile from './Screens/ProjectProfile/ProjectProfile';\nimport StartupAdminPanel from './Screens/StartupAdminPanel/StartupAdminPanel';\nimport JobPanel from './Screens/StartupAdminPanel/JobPanel/JobPanel';\nimport AddJob from './Screens/AddJob/AddJob';\nimport { connect } from 'react-redux';\nimport { setSkills, setUserInfo, setProjects, getUsers, getNotifications, getJobs } from './Actions/index';\nimport jwt from 'jsonwebtoken';\nimport JobListings from './Screens/JobListing/JobListings';\nimport SettingsPanel from './Screens/PostStartup/ProjectSettings';\nimport WorkersList from './Screens/WorkersList/WorkersList';\nimport JobInfo from './Screens/JobInfo/JobInfo';\nimport EditUser from './Screens/EditUser/EditUser';\nimport Suggestions from './Screens/Suggestions/Suggestions';\nimport NotFound from './Screens/NotFound/NotFound';\nimport SuccessPage from './Screens/SuccessPage/SuccessPage';\nimport TermsAndConditions from './Screens/TermsAndConditions/Terms';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App({\n  setGlobalSkills,\n  setUserInfo,\n  setProjects,\n  getUsers,\n  getNotifications,\n  getJobs\n}) {\n  _s();\n\n  useEffect(() => {\n    const user = jwt.decode(JSON.parse(localStorage.getItem('user')));\n\n    if (user) {\n      setUserInfo(user.username);\n      getNotifications(user.username);\n    }\n\n    setGlobalSkills();\n    setProjects();\n    getUsers();\n    getJobs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      component: Header\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      render: ({\n        location\n      }) => /*#__PURE__*/_jsxDEV(HeaderUser, {\n        pathname: location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 55\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: Homepage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/jobs\",\n        component: JobListings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/user/:username\",\n        render: ({\n          match,\n          location\n        }) => /*#__PURE__*/_jsxDEV(UserProfile, {\n          pathname: location,\n          username: match.params.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 86\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/project/post\",\n        component: PostStartup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/project/profile/:projectId\",\n        render: ({\n          match\n        }) => /*#__PURE__*/_jsxDEV(ProjectProfile, {\n          projectID: match.params.projectId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 88\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/admin/panel\",\n        component: StartupAdminPanel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/project/jobPanel/:projectId\",\n        render: ({\n          match\n        }) => /*#__PURE__*/_jsxDEV(JobPanel, {\n          projectID: match.params.projectId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 89\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/project/addJob/:projectId\",\n        render: ({\n          match\n        }) => /*#__PURE__*/_jsxDEV(AddJob, {\n          projectID: match.params.projectId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 87\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/project/settings/:projectId\",\n        render: ({\n          match\n        }) => /*#__PURE__*/_jsxDEV(SettingsPanel, {\n          projectID: match.params.projectId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 89\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/job/info/:jobId\",\n        render: ({\n          match\n        }) => /*#__PURE__*/_jsxDEV(JobInfo, {\n          jobID: match.params.jobId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 77\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/edit/user/me\",\n        component: EditUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/workers\",\n        component: WorkersList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/suggestions\",\n        render: ({\n          location\n        }) => /*#__PURE__*/_jsxDEV(Suggestions, {\n          pathname: location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 76\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/success\",\n        component: SuccessPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/about\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      component: Footer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setGlobalSkills: nothing => dispatch(setSkills()),\n    setUserInfo: username => dispatch(setUserInfo(username)),\n    setProjects: nothing => dispatch(setProjects()),\n    getUsers: nothing => dispatch(getUsers()),\n    getNotifications: username => dispatch(getNotifications(username)),\n    getJobs: nothing => dispatch(getJobs())\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/felipebuscaglia/Henry/finddevsfrontend/src/App.js"],"names":["React","useEffect","Route","Switch","Header","Homepage","UserProfile","Footer","HeaderUser","PostStartup","ProjectProfile","StartupAdminPanel","JobPanel","AddJob","connect","setSkills","setUserInfo","setProjects","getUsers","getNotifications","getJobs","jwt","JobListings","SettingsPanel","WorkersList","JobInfo","EditUser","Suggestions","NotFound","SuccessPage","TermsAndConditions","App","setGlobalSkills","user","decode","JSON","parse","localStorage","getItem","username","location","match","params","projectId","jobId","mapDispatchToProps","dispatch","nothing"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Header from './Components/Header/Header';\nimport Homepage from './Screens/Homepage/Homepage';\nimport UserProfile from './Screens/UserProfile/UserProfile';\nimport Footer from './Components/Footer/Footer';\nimport HeaderUser from './Components/HeaderUser/HeaderUser';\nimport PostStartup from './Screens/PostStartup/PostStartup';\nimport ProjectProfile from './Screens/ProjectProfile/ProjectProfile';\nimport StartupAdminPanel from './Screens/StartupAdminPanel/StartupAdminPanel';\nimport JobPanel from './Screens/StartupAdminPanel/JobPanel/JobPanel';\nimport AddJob from './Screens/AddJob/AddJob';\nimport { connect } from 'react-redux';\nimport { setSkills, setUserInfo, setProjects, getUsers, getNotifications, getJobs } from './Actions/index';\nimport jwt from 'jsonwebtoken';\nimport JobListings from './Screens/JobListing/JobListings';\nimport SettingsPanel from './Screens/PostStartup/ProjectSettings';\nimport WorkersList from './Screens/WorkersList/WorkersList';\nimport JobInfo from './Screens/JobInfo/JobInfo';\nimport EditUser from './Screens/EditUser/EditUser';\nimport Suggestions from './Screens/Suggestions/Suggestions';\nimport NotFound from './Screens/NotFound/NotFound';\nimport SuccessPage from './Screens/SuccessPage/SuccessPage';\nimport TermsAndConditions from './Screens/TermsAndConditions/Terms';\n\nfunction App({ setGlobalSkills, setUserInfo, setProjects, getUsers, getNotifications, getJobs }) {\n\n    useEffect(() => {\n        const user = jwt.decode(JSON.parse(localStorage.getItem('user')));\n        if (user) {\n            setUserInfo(user.username);\n            getNotifications(user.username);\n        }\n        setGlobalSkills();\n        setProjects();\n        getUsers();\n        getJobs();\n    }, [])\n\n    return (\n        <div>\n            <Route exact path='/' component={Header} />\n            <Route path='/' render={({ location }) => < HeaderUser pathname={location} />} />\n            <Switch>\n                <Route exact path='/' component={Homepage} />\n                <Route exact path='/jobs' component={JobListings} />\n                <Route exact path='/user/:username' render={({ match, location }) => < UserProfile pathname={location} username={match.params.username} />} />\n                <Route exact path='/project/post' component={PostStartup} />\n                <Route exact path='/project/profile/:projectId' render={({ match }) => < ProjectProfile projectID={match.params.projectId} />} />\n                <Route exact path='/admin/panel' component={StartupAdminPanel} />\n                <Route exact path='/project/jobPanel/:projectId' render={({ match }) => < JobPanel projectID={match.params.projectId} />} />\n                <Route exact path='/project/addJob/:projectId' render={({ match }) => < AddJob projectID={match.params.projectId} />} />\n                <Route exact path='/project/settings/:projectId' render={({ match }) => <SettingsPanel projectID={match.params.projectId} />} />\n                <Route exact path='/job/info/:jobId' render={({ match }) => < JobInfo jobID={match.params.jobId} />} />\n                <Route exact path='/edit/user/me' component={EditUser} />\n                <Route exact path='/workers' component={WorkersList} />\n                <Route exact path='/suggestions' render={({ location }) => <Suggestions pathname={location} />} />\n                <Route exact path='/success' component={SuccessPage} />\n                <Route exact path='/about' />\n                <NotFound />\n            </Switch>\n            <Route exact path='/' component={Footer} />\n        </div>\n    )\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        setGlobalSkills: nothing => dispatch(setSkills()),\n        setUserInfo: username => dispatch(setUserInfo(username)),\n        setProjects: nothing => dispatch(setProjects()),\n        getUsers: nothing => dispatch(getUsers()),\n        getNotifications: username => dispatch(getNotifications(username)),\n        getJobs: nothing => dispatch(getJobs())\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}