{"ast":null,"code":"import React from'react';import style from'./JobListings.module.css';import Tooltip from'@material-ui/core/Tooltip';import{withStyles,makeStyles}from\"@material-ui/core/styles\";import{Link}from'react-router-dom';import{connect}from'react-redux';import{filterJob}from'../../Actions/index';import moment from'moment';import{getDate}from'../../utils';import Verification from'../../Media/logo.png';import InvertedVerification from'../../Media/invertedlogo.png';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faChartLine,faThumbsUp,faUsers}from'@fortawesome/free-solid-svg-icons';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{arrow:{color:\"#181a19\"}};});function JobCard(_ref){var job=_ref.job,filterJobs=_ref.filterJobs,setLoading=_ref.setLoading,skillSelection=_ref.skillSelection;var classes=useStyles();var BlueOnGreenTooltip=withStyles({tooltip:{color:\"white\",backgroundColor:\"#181a19\",fontFamily:'Nunito',fontSize:'12px'}})(Tooltip);function addSkill(skill){setLoading(true);var dontRepeat=skillSelection.find(function(filtered){return filtered.id===skill.id;});if(!dontRepeat)filterJobs(skill);setLoading(false);}return/*#__PURE__*/_jsxs(\"div\",{id:style.mainDiv,style:{background:job.project.mainColor,color:job.project.brightness==='bright'?'#fff':'#000'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"displayFlex\",id:\"alignItemsCenter\",children:[/*#__PURE__*/_jsx(\"div\",{id:style.imgDiv,children:/*#__PURE__*/_jsx(\"img\",{alt:\"Project logo\",src:job.project.logo,id:style.icon})}),/*#__PURE__*/_jsxs(\"div\",{id:style.jobInfoDiv,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"displayFlex\",id:style.nameAndLogo,children:[/*#__PURE__*/_jsx(\"span\",{id:style.projectName,children:job.project.name}),job.project.isPremium&&/*#__PURE__*/_jsx(BlueOnGreenTooltip,{classes:{arrow:classes.arrow},id:style.tooltip,title:\"Verified project\",arrow:true,children:/*#__PURE__*/_jsx(\"img\",{alt:\"FindDevs verification\",id:style.verification,src:job.project.brightness==='bright'?InvertedVerification:Verification})})]}),/*#__PURE__*/_jsx(\"span\",{children:job.title}),/*#__PURE__*/_jsxs(\"div\",{id:style.badgeDiv,children:[job.project.upvotes>50&&/*#__PURE__*/_jsxs(\"span\",{id:style.badge,children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faThumbsUp}),\" HIGHLY UPVOTED\"]}),job.project.users.length>5&&/*#__PURE__*/_jsxs(\"span\",{id:style.badge,children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faChartLine}),\" GROWING FAST\"]}),job.project.users.length>=10&&/*#__PURE__*/_jsxs(\"span\",{id:style.badge,children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faUsers}),\" BIG TEAM\"]})]})]})]}),/*#__PURE__*/_jsx(\"div\",{id:style.skillDiv,children:job.skills.map(function(skill){return/*#__PURE__*/_jsx(BlueOnGreenTooltip,{classes:{arrow:classes.arrow},id:style.tooltip,title:\"Add tag to filters\",arrow:true,children:/*#__PURE__*/_jsx(\"div\",{style:{border:job.project.brightness==='bright'?'2px solid #fff':'2px solid #000'},onClick:function onClick(){return addSkill(skill);},id:style.skillSpan,children:skill.label})},skill.id);})}),/*#__PURE__*/_jsxs(\"div\",{id:style.applyAndMoment,children:[/*#__PURE__*/_jsx(Link,{to:\"/job/info/\".concat(job.id),children:/*#__PURE__*/_jsx(\"button\",{style:{color:job.project.brightness==='bright'?'#fff':'#000',border:job.project.brightness==='bright'?'4px solid #fff':'4px solid #000'},id:style.btn,children:\"Apply\"})}),/*#__PURE__*/_jsxs(\"span\",{id:style.time,children:[\"\\uD83D\\uDCCC\",getDate(moment(job.createdAt).format('MM/DD/YYYY'))]})]})]});}function mapStateToProps(state){return{skillSelection:state.jobSkillSelection};}function mapDispatchToProps(dispatch){return{filterJobs:function filterJobs(skill){return dispatch(filterJob(skill));}};}export default connect(mapStateToProps,mapDispatchToProps)(JobCard);","map":{"version":3,"sources":["/Users/felipebuscaglia/Henry/finddevsfrontend/src/Screens/JobListing/JobCard.jsx"],"names":["React","style","Tooltip","withStyles","makeStyles","Link","connect","filterJob","moment","getDate","Verification","InvertedVerification","FontAwesomeIcon","faChartLine","faThumbsUp","faUsers","useStyles","theme","arrow","color","JobCard","job","filterJobs","setLoading","skillSelection","classes","BlueOnGreenTooltip","tooltip","backgroundColor","fontFamily","fontSize","addSkill","skill","dontRepeat","find","filtered","id","mainDiv","background","project","mainColor","brightness","imgDiv","logo","icon","jobInfoDiv","nameAndLogo","projectName","name","isPremium","verification","title","badgeDiv","upvotes","badge","users","length","skillDiv","skills","map","border","skillSpan","label","applyAndMoment","btn","time","createdAt","format","mapStateToProps","state","jobSkillSelection","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport style from './JobListings.module.css';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { filterJob } from '../../Actions/index';\nimport moment from 'moment';\nimport { getDate } from '../../utils';\nimport Verification from '../../Media/logo.png';\nimport InvertedVerification from '../../Media/invertedlogo.png';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChartLine, faThumbsUp, faUsers } from '@fortawesome/free-solid-svg-icons';\n\nconst useStyles = makeStyles(theme => ({\n    arrow: { color: \"#181a19\" }\n}));\n\nfunction JobCard({ job, filterJobs, setLoading, skillSelection }) {\n\n    const classes = useStyles();\n\n    const BlueOnGreenTooltip = withStyles({\n        tooltip: {\n            color: \"white\",\n            backgroundColor: \"#181a19\",\n            fontFamily: 'Nunito',\n            fontSize: '12px'\n        }\n    })(Tooltip);\n\n    function addSkill (skill) {\n        setLoading (true);\n        const dontRepeat = skillSelection.find (filtered => filtered.id === skill.id);\n        if (!dontRepeat) filterJobs(skill);\n        setLoading (false);\n    }\n\n    return (\n        <div id={style.mainDiv} style={{ background: job.project.mainColor, color: job.project.brightness === 'bright' ? '#fff' : '#000' }}>\n            <div className='displayFlex' id='alignItemsCenter'>\n                <div id={style.imgDiv}><img alt=\"Project logo\" src={job.project.logo} id={style.icon} /></div>\n                <div id={style.jobInfoDiv}>\n                    <div className='displayFlex' id={style.nameAndLogo}>\n                        <span id={style.projectName}>{job.project.name}</span>\n                        {job.project.isPremium && <BlueOnGreenTooltip classes={{ arrow: classes.arrow }} id={style.tooltip} title='Verified project' arrow>\n                            <img alt=\"FindDevs verification\" id={style.verification} src={job.project.brightness === 'bright' ? InvertedVerification : Verification} />\n                        </BlueOnGreenTooltip>}\n                    </div>\n                    <span>{job.title}</span>\n                    <div id={style.badgeDiv}>\n                        {job.project.upvotes > 50 && <span id={style.badge}><FontAwesomeIcon icon={faThumbsUp} /> HIGHLY UPVOTED</span>}\n                        {job.project.users.length > 5 && <span id={style.badge}><FontAwesomeIcon icon={faChartLine} /> GROWING FAST</span>}\n                        {job.project.users.length >=10 && <span id={style.badge}><FontAwesomeIcon icon={faUsers} /> BIG TEAM</span>}\n                    </div>\n                </div>\n            </div>\n            <div id={style.skillDiv}>\n                {job.skills.map(skill =>\n                    <BlueOnGreenTooltip key={skill.id} classes={{ arrow: classes.arrow }} id={style.tooltip} title='Add tag to filters' arrow>\n                        <div style={{ border: job.project.brightness === 'bright' ? '2px solid #fff' : '2px solid #000' }} onClick={() => addSkill (skill) } id={style.skillSpan}>{skill.label}</div>\n                    </BlueOnGreenTooltip>\n                )}\n            </div>\n            <div id={style.applyAndMoment}>\n                <Link to={`/job/info/${job.id}`}><button style={{ color: job.project.brightness === 'bright' ? '#fff' : '#000', border: job.project.brightness === 'bright' ? '4px solid #fff' : '4px solid #000' }} id={style.btn}>Apply</button></Link>\n                <span id={style.time}>📌{getDate(moment(job.createdAt).format('MM/DD/YYYY'))}</span>\n            </div>\n        </div>\n    )\n}\n\nfunction mapStateToProps (state) {\n    return {\n        skillSelection: state.jobSkillSelection\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        filterJobs: skill => dispatch(filterJob(skill))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JobCard);"]},"metadata":{},"sourceType":"module"}